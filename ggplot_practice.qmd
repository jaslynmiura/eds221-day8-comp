---
title: "Ggplot Practice"
author: "Jaslyn Miura"
format: html
editor_options: 
  chunk_output_type: console
---
Attaching packages
```{r}

library(tidyverse)
library(here)
library(janitor)

```

## ggplot basics
Read in lizard data
```{r}

lizards <- read_csv(here("data_tidy", "lizards.csv"))

```

## The essentials
- data
- aesthestics
- geometry

```{r}

# ggplot essentials, 3 ways
# first
# data and aesthetics stay consistent throughout plot
ggplot(data = lizards, 
       aes(x = total_length, y = weight)) + # (1 and 2)
  geom_point() # 3

# second
# data stays consistent throughout plot
ggplot(data = lizards) + 
  geom_point(aes(x = total_length, y = weight))

# third
# nothing stays consistent
ggplot() +
  geom_point(data = lizards,
             aes(x = total_length, y = weight))

# makes the figure, syntax is a little different


```

## Swap out geometries
```{r}
# bad example
ggplot(data = lizards,
       aes(x = total_length, y = weight)) +
  geom_line()
```

Some geometry types only need one axis
```{r}

ggplot(data = lizards,
       aes(x = total_length)) + 
  geom_histogram()

```

Jitter plots usually are best with one categorical and one continuous variable
```{r}

ggplot(data = lizards,
       aes(x = weight, y = common_name)) +
  geom_jitter()

```
## Aesthetic mapping
### Updating based on a constant value
Don't need to use the `aes()` function
```{r}

ggplot(data = lizards, aes(x = weight)) +
  geom_histogram(color = "#007991",
                 fill = "#CAE7B9",
                 alpha = 0.5,
                 linetype = "dashed")

```

## Updating aesthetics based on variables
In that case, we need to use the `aes()` function
```{r}

ggplot(data = lizards,
       aes(x = total_length, y = weight)) + 
  geom_point(aes(color = common_name),
             alpha = 0.3)

```

## Themes
# Update axis labels
```{r}

ggplot(data = lizards,
       aes(x = weight, y = site)) + 
  geom_jitter(aes(color = common_name)) + 
  theme_minimal() +
  labs(x = "Weight (g)",
       y = "Study site",
       title = "Lizard weights across sites at Jornada",
       color = "Species") # color changes the legend title, it's color because we used species for color

```

## Reorder data
```{r}

lizard_counts <- lizards %>% 
  count(common_name)

ggplot(data = lizard_counts, 
       aes(x = n, y = fct_reorder(common_name, n))) + 
  geom_col() +
  labs(x = "Individuals (n)",
       y = "Species common name")

```

